"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[9015],{45268:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var i=o(25571),n=o(74848),s=o(28453);const a={title:"Finetuning Toolshim Models for Tool Calling",description:"Addressing performance limitations in models without native tool calling support",authors:["alice","mic"]},l=void 0,r={authorsImageUrls:[void 0,void 0]},c=[];function m(e){const t={a:"a",img:"img",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"blog cover",src:o(1905).A+"",width:"1200",height:"630"})}),"\n",(0,n.jsxs)(t.p,{children:["Our recently published ",(0,n.jsx)(t.a,{href:"https://block.github.io/goose/blog/2025/03/31/goose-benchmark",children:"Goose benchmark"})," revealed significant performance limitations in models where tool calling is not straightforwardly supported (e.g., Gemma3, Deepseek-r1, phi4). These models often fail to invoke tools at appropriate times or produce malformed or inconsistently formatted tool calls. With the most recent releases of Llama4 and Deepseek v3 (0324), we are again observing challenges with effective tool calling performance, even on these flagship openweight models."]})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},1905:(e,t,o)=>{o.d(t,{A:()=>i});const i=o.p+"assets/images/toolshim-header-42611f614e7722f90cf83991debe3046.png"},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>l});var i=o(96540);const n={},s=i.createContext(n);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(s.Provider,{value:t},e.children)}},25571:e=>{e.exports=JSON.parse('{"permalink":"/goose/blog/2025/04/11/finetuning-toolshim","source":"@site/blog/2025-04-11-finetuning-toolshim/index.md","title":"Finetuning Toolshim Models for Tool Calling","description":"Addressing performance limitations in models without native tool calling support","date":"2025-04-11T00:00:00.000Z","tags":[],"readingTime":5.46,"hasTruncateMarker":true,"authors":[{"name":"Alice Hau","title":"Machine Learning Engineer","page":{"permalink":"/goose/blog/authors/alice"},"socials":{"linkedin":"https://www.linkedin.com/in/alice-hau/","github":"https://github.com/alicehau"},"imageURL":"https://avatars.githubusercontent.com/u/110418948?v=4","key":"alice"},{"name":"Michael Neale","title":"Principal Engineer","page":{"permalink":"/goose/blog/authors/mic"},"socials":{"github":"https://github.com/michaelneale"},"imageURL":"https://avatars.githubusercontent.com/u/14976?v=4","key":"mic"}],"frontMatter":{"title":"Finetuning Toolshim Models for Tool Calling","description":"Addressing performance limitations in models without native tool calling support","authors":["alice","mic"]},"unlisted":false,"prevItem":{"title":"How ATrueLight4 Helped Goose Navigate Windows","permalink":"/goose/blog/2025/04/14/community-atruelight4"},"nextItem":{"title":"A Visual Guide To MCP Ecosystem","permalink":"/goose/blog/2025/04/10/visual-guide-mcp"}}')}}]);