"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[5060],{77513:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/benchmarking","title":"Benchmarking with Goose","description":"The Goose benchmarking system allows you to evaluate goose performance on complex tasks with one or more system","source":"@site/docs/guides/benchmarking.md","sourceDirName":"guides","slug":"/guides/benchmarking","permalink":"/goose/docs/guides/benchmarking","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12,"title":"Benchmarking with Goose","sidebar_label":"Benchmark with Goose"},"sidebar":"tutorialSidebar","previous":{"title":"Adjust Tool Output","permalink":"/goose/docs/guides/adjust-tool-output"},"next":{"title":"Run Tasks","permalink":"/goose/docs/guides/running-tasks"}}');var l=s(74848),o=s(28453);const r={sidebar_position:12,title:"Benchmarking with Goose",sidebar_label:"Benchmark with Goose"},a=void 0,t={},c=[{value:"Quick Start",id:"quick-start",level:3},{value:"Configuration File",id:"configuration-file",level:2},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Models Section",id:"models-section",level:4},{value:"Evals Section",id:"evals-section",level:4},{value:"General Options",id:"general-options",level:4},{value:"Mechanics of include_dirs option",id:"mechanics-of-include_dirs-option",level:5},{value:"Customizing Evaluations",id:"customizing-evaluations",level:3},{value:"Output and Results",id:"output-and-results",level:2},{value:"Debug Mode",id:"debug-mode",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Tool Shimming",id:"tool-shimming",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["The Goose benchmarking system allows you to evaluate goose performance on complex tasks with one or more system\nconfigurations.",(0,l.jsx)("br",{}),"\nThis guide covers how to use the ",(0,l.jsx)(n.code,{children:"goose bench"})," command to run benchmarks and analyze results."]}),"\n",(0,l.jsx)(n.h3,{id:"quick-start",children:"Quick Start"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["The benchmarking system includes several evaluation suites.",(0,l.jsx)("br",{}),"\nRun the following to see a listing of every valid selector:"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"goose bench selectors\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Create a basic configuration file:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'goose bench init-config -n bench-config.json\ncat bench-config.json\n{\n  "models": [\n    {\n      "provider": "databricks",\n      "name": "goose",\n      "parallel_safe": true\n    }\n  ],\n  "evals": [\n    {\n      "selector": "core",\n      "parallel_safe": true\n    }\n  ],\n  "repeat": 1\n}\n...etc.\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Run the benchmark:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"goose bench run -c bench-config.json\n"})}),"\n",(0,l.jsx)(n.h2,{id:"configuration-file",children:"Configuration File"}),"\n",(0,l.jsx)(n.p,{children:"The benchmark configuration is specified in a JSON file with the following structure:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "models": [\n    {\n      "provider": "databricks",\n      "name": "goose",\n      "parallel_safe": true,\n      "tool_shim": {\n        "use_tool_shim": false,\n        "tool_shim_model": null\n      }\n    }\n  ],\n  "evals": [\n    {\n      "selector": "core",\n      "post_process_cmd": null,\n      "parallel_safe": true\n    }\n  ],\n  "include_dirs": [],\n  "repeat": 2,\n  "run_id": null,\n  "eval_result_filename": "eval-results.json",\n  "run_summary_filename": "run-results-summary.json",\n  "env_file": null\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,l.jsx)(n.h4,{id:"models-section",children:"Models Section"}),"\n",(0,l.jsxs)(n.p,{children:["Each model entry in the ",(0,l.jsx)(n.code,{children:"models"})," array specifies:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"provider"}),': The model provider (e.g., "databricks")']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"}),": Model identifier"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"parallel_safe"}),": Whether the model can be run in parallel"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tool_shim"}),": Optional configuration for tool shimming","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"use_tool_shim"}),": Enable/disable tool shimming"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tool_shim_model"}),": Optional model to use for tool shimming"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"evals-section",children:"Evals Section"}),"\n",(0,l.jsxs)(n.p,{children:["Each evaluation entry in the ",(0,l.jsx)(n.code,{children:"evals"})," array specifies:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"selector"}),': The evaluation suite to run (e.g., "core")']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"post_process_cmd"}),": Optional path to a post-processing script"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"parallel_safe"}),": Whether the evaluation can run in parallel"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"general-options",children:"General Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"include_dirs"}),": Additional directories to include in the evaluation"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"repeat"}),": Number of times to repeat each evaluation"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"run_id"}),": Optional identifier for the benchmark run"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"eval_result_filename"}),": Name of the evaluation results file"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"run_summary_filename"}),": Name of the summary results file"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"env_file"}),": Optional path to an environment file"]}),"\n"]}),"\n",(0,l.jsx)(n.h5,{id:"mechanics-of-include_dirs-option",children:"Mechanics of include_dirs option"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"include_dirs"})," config parameter makes the items at all paths listed within the option, available to all\nevaluations.",(0,l.jsx)("br",{}),"\nIt accomplishes this by:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"copying each included asset into the top-level directory created for each model/provider pair"}),"\n",(0,l.jsxs)(n.li,{children:["at evaluation run-time","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"whichever assets is explicitly required by an evaluation gets copied into the eval-specific directory"}),"\n",(0,l.jsx)(n.li,{children:"only if the evaluation-code specifically pulls it in"}),"\n",(0,l.jsx)(n.li,{children:"and only if the evaluation actually is covered by one of the configured selectors and therefore runs"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"customizing-evaluations",children:"Customizing Evaluations"}),"\n",(0,l.jsx)(n.p,{children:"You can customize runs in several ways:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Using Post-Processing Commands after evaluation:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "evals": [\n    {\n      "selector": "core",\n      "post_process_cmd": "/path/to/process-script.sh",\n      "parallel_safe": true\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Including Additional Data:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "include_dirs": [\n    "/path/to/custom/eval/data"\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsx)(n.li,{children:"Setting Environment Variables:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "env_file": "/path/to/env-file"\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"output-and-results",children:"Output and Results"}),"\n",(0,l.jsxs)(n.p,{children:["The benchmark generates two main output files within a file-hierarchy similar to the following.",(0,l.jsx)("br",{}),"\nResults from running ach model/provider pair are stored within their own directory:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"benchmark-${datetime}/\n  ${model}-${provider}[-tool-shim[-${shim-model}]]/\n    run-${i}/\n      ${an-include_dir-asset}\n      run-results-summary.json\n      core/developer/list_files/\n        ${an-include_dir-asset}\n        run-results-summary.json\n"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"eval-results.json"}),": Contains detailed results from each evaluation, including:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Individual test case results"}),"\n",(0,l.jsx)(n.li,{children:"Model responses"}),"\n",(0,l.jsx)(n.li,{children:"Scoring metrics"}),"\n",(0,l.jsx)(n.li,{children:"Error logs"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"run-results-summary.json"}),": A collection of all eval results across all suites."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,l.jsx)(n.p,{children:"For detailed logging, you can enable debug mode:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"RUST_LOG=debug goose bench bench-config.json\n"})}),"\n",(0,l.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,l.jsx)(n.h3,{id:"tool-shimming",children:"Tool Shimming"}),"\n",(0,l.jsxs)(n.p,{children:["Tool shimming allows you to use a non-tool-capable models with Goose, provided Ollama is installed on the\nsystem.",(0,l.jsx)("br",{}),"\nSee this guide for important details on ",(0,l.jsx)(n.a,{href:"experimental-features",children:"tool shimming"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(96540);const l={},o=i.createContext(l);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);